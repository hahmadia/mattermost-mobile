diff --git a/node_modules/react-native-mmkv-storage/ios/MMKVStorage.m b/node_modules/react-native-mmkv-storage/ios/MMKVStorage.m
index 6ce0b16..a1b3c56 100644
--- a/node_modules/react-native-mmkv-storage/ios/MMKVStorage.m
+++ b/node_modules/react-native-mmkv-storage/ios/MMKVStorage.m
@@ -45,7 +45,10 @@ - (id)init
 {
     self = [super init];
     if (self) {
-        [MMKV initialize];
+        NSString *APP_GROUP_ID = @"group.com.mattermost.rnbeta";
+        NSString *groupDir = [[NSFileManager defaultManager] containerURLForSecurityApplicationGroupIdentifier:APP_GROUP_ID].path;
+        [MMKV initializeMMKV:nil groupDir:groupDir logLevel:MMKVLogInfo];
+
         secureStorage = [[SecureStorage alloc]init];
         IdStore = [[IDStore alloc] initWithMMKV:[MMKV mmkvWithID:@"mmkvIdStore"]];
         mmkvMap = [NSMutableDictionary dictionary];
diff --git a/node_modules/react-native-mmkv-storage/ios/SecureStorage.m b/node_modules/react-native-mmkv-storage/ios/SecureStorage.m
index 70f3a01..07e1af0 100644
--- a/node_modules/react-native-mmkv-storage/ios/SecureStorage.m
+++ b/node_modules/react-native-mmkv-storage/ios/SecureStorage.m
@@ -184,7 +184,7 @@ - (BOOL)searchKeychainCopyMatchingExists:(NSString *)identifier {
 }
 
 - (BOOL)createKeychainValue:(NSString *)value forIdentifier:(NSString *)identifier options: (NSDictionary * __nullable)options {
-    CFStringRef accessible = accessibleValue(options);
+    CFStringRef accessible = secureStoreAccessibleValue(options);
     NSMutableDictionary *dictionary = [self newSearchDictionary:identifier];
     
     NSData *valueData = [value dataUsingEncoding:NSUTF8StringEncoding];
@@ -201,7 +201,7 @@ - (BOOL)createKeychainValue:(NSString *)value forIdentifier:(NSString *)identifi
 
 - (BOOL)updateKeychainValue:(NSString *)password forIdentifier:(NSString *)identifier options:(NSDictionary * __nullable)options {
     
-    CFStringRef accessible = accessibleValue(options);
+    CFStringRef accessible = secureStoreAccessibleValue(options);
     NSMutableDictionary *searchDictionary = [self newSearchDictionary:identifier];
     NSMutableDictionary *updateDictionary = [[NSMutableDictionary alloc] init];
     NSData *passwordData = [password dataUsingEncoding:NSUTF8StringEncoding];
@@ -255,7 +255,7 @@ - (void)handleAppUninstallation
 
 
 
-CFStringRef accessibleValue(NSDictionary *options)
+CFStringRef secureStoreAccessibleValue(NSDictionary *options)
 {
     if (options && options[@"accessible"] != nil) {
         NSDictionary *keyMap = @{
